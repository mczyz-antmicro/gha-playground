name: Cache deposit

on:
  push:

env:
  CCACHE_DIR: "/home/runner/.cache/"
  MOCK_VERIFICATION_RUN: true

jobs:
    deposit:
      name: deposit
      runs-on: ubuntu-latest
      steps:

        - name: Run ${{ matrix.test }}
          if: ${{ env.MOCK_VERIFICATION_RUN == 'false' }}
          run: |
            echo "env is false"
            echo ${{ env.MOCK_VERIFICATION_RUN }}

        - name: Run ${{ matrix.test }}
          if: ${{ env.MOCK_VERIFICATION_RUN == 'true' }}
          run: |
            echo "env is true"
            echo ${{ env.MOCK_VERIFICATION_RUN }}

        - name: Setup repository
          uses: actions/checkout@v3
          with:
            submodules: recursive

        - name: Install prerequisities2
          run: |
            sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            ccache g++

        - name: Install prerequisities
          run: |
            mkdir dir1 dir2
            pushd dir1
              echo "hello world" >> file1.txt
            popd
            pushd dir2
              echo "hello world2" >> file2.txt
            popd
            mkdir .hidden_dir
            mv dir1 .hidden_dir

        - name: Setup Cache Metadata
          id: cache_metadata
          run: |
            cache_date=$(date +"%Y_%m_%d")
            cache_name=cache_$cache_date
            echo "Cache date: "$cache_date
            echo "Cache name: "$cache_name
            echo "cache_date=$cache_date" >> "$GITHUB_ENV"
            echo "cache_name=$cache_name" >> "$GITHUB_ENV"

        - name: build cpp
          run: |
            ccache g++ main.cpp
            ./a.out

        - name: Setup cache
          uses: actions/cache@v3
          id: cache
          with:
            path: |
              ${{ github.workspace }}/.hidden_dir/dir1
              ${{ github.workspace }}/dir2
              /home/runner/.cache/ccache
            key: ${{ env.cache_name }}






          # TODO: fix once coverage is implemented
            # mkdir -p coverage_${{ matrix.test }}
            # mkdir -p ${{ github.workspace }}/results_${{ matrix.test }}
            # mv coverage_${{matrix.test}} ${{ github.workspace }}/
            # ./github/scripts/convert_coverage_data.sh all ${{ github.workspace }}/coverage ${{ github.workspace }}/results_${{ matrix.test }} coverage_${{ matrix.test }}



      # TODO: fix once coverage is implemented
      # - name: Upload coverage artifacts
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: verification_tests_coverage_data
      #     path: |
      #       ./results/*.info